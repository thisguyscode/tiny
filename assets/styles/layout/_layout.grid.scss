/* ==========================================================================
   
   #GRID

   ========================================================================== */

/**
 * Cells are full-width and will stack on top of each other by default:
 *
 * <div class="l-grid">
 *   <div class="l-grid__cell">
 *   </div>
 *   <div class="l-grid__cell">
 *   </div>
 * </div>
 *
 * Cells will in most cases be accompanied by utility classes that divide
 * the grid into fractions:
 *
 * <div class="l-grid">
 *   <div class="l-grid__cell u-1/2">
 *   </div>
 *   <div class="l-grid__cell u-1/2">
 *   </div>
 * </div>
 *
 * Several modifier classes are provided. For example, `l-grid--auto` will
 * divide the space equally between all containing cells without the need
 * for width utility classes.
 *
 * <div class="l-grid--auto">
 *   <div class="l-grid__cell">
 *   </div>
 *   <div class="l-grid__cell">
 *   </div>
 * </div>
 */

// This variable is deprecated. Use $flexgrid-spacing-sizes instead.

$flexgrid-gutter-width: $unit-md !default;

// Specify a map of possible gutter widths. By default we use the global
// spacing units

$flexgrid-spacing-sizes: (
    null: $flexgrid-gutter-width,
    '--xs': $unit-xs,
    '--sm': $unit-sm,
    '--lg': $unit-lg,
    '--xl': $unit-xl,
    '--flush': 0,
) !default;


/* The grid
   ========================================================================== */

.l-grid {
    display: flex;
    flex-flow: row wrap;
    list-style: none;
    padding: 0;
}

/**
 * 1. Cells are full-width and stack on top of each other by default.
 */

.l-grid__cell {
    flex: 0 1 auto;
    width: 100%; /* [1] */
}


/* Gutters
   ========================================================================== */

/**
 * 1. The variable $flexgrid-spacing-sizes contains a `null` key which
 *    will be our default gutter size.
 * 2. Add a negative margin only on one side. That way we aren't required to
 *    use a wrapper with the same amount of spacing, though it's common to do so.
 * 3. Neutralize the left margin on `l-grid`.
 */

@each $size-namespace, $size in $flexgrid-spacing-sizes {
    .l-grid#{$size-namespace} { /* [1] */
        margin-left: -$size; /* [2] */
        & > .l-grid__cell {
            padding-left: $size; /* [3] */
        }
    }
}


/* Automatically size cells by distributing them equally
   ========================================================================== */

.l-grid--auto {
    & > .l-grid__cell {
        flex: 1 0 0;
    }
}


/* Horizontal alignment
   ========================================================================== */

.l-grid--center {
    justify-content: center;
}

.l-grid--right {
    justify-content: flex-end;
}

.l-grid--left {
    justify-content: flex-start;
}


/* Vertical alignment
   ========================================================================== */

.l-grid--middle {
    align-items: center;
}

.l-grid--bottom {
    align-items: flex-end;
}


/* Content distribution
   ========================================================================== */

.l-grid--around {
    justify-content: space-around;
}

.l-grid--between {
    justify-content: space-between;
}

.l-grid--reverse {
    flex-direction: row-reverse;

}