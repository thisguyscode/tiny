/* ========================================================================

  #VERTICAL RHYTHM (vr)

  ======================================================================== */

@mixin vr($font-family: $font-body, $font-size: $base-font-size) {

	// Calculate the line height of the text.
	$line-height: $font-size * $base-line-height;

	// How much rhythm fits in the line height?
	$rhythm-count: $line-height / $rhythm;

	// Round the rhythm count to half cycles.
	$rhythm-count-half: $rhythm-count - ($rhythm-count - floor($rhythm-count));

	// Calculate the adjusted line height.
	$adjusted-line-height: $rhythm-count-half * $rhythm;

	// Shift the text to the baseline (distance between the baseline and descender height).
	$baseline-shift: (($adjusted-line-height - $font-size) * 0.5);

	position: relative;

	margin-top: 0;
	margin-bottom: 0;
	padding-top: 0;
	padding-bottom: 0;

	font-size: $font-size;

	// Make sure that 1 rhythm is the minimum line height.
	@if $adjusted-line-height < 1 {
		line-height: $base-font-size * $base-line-height;
	} @else {
		line-height: $adjusted-line-height;
	}

	// Set offsets and font families.
	@if $font-family == $font-display {
		top: calc(#{$cap-font-display} + #{$baseline-shift} - (#{$adjusted-line-height} * 0.5));

		font-family: $font-display;
	} @else if $font-family == $font-mono {
		top: calc(#{$cap-font-mono} + #{$baseline-shift} - (#{$adjusted-line-height} * 0.5));

		font-family: $font-mono;
	} @else {
		top: calc(#{$cap-font-body} + #{$baseline-shift} - (#{$adjusted-line-height} * 0.5));
	}
}

@mixin vr-reset {
	position: static;
	top: auto;
}


// Create a mixin for showing the baseline
@mixin vr-baseline {
  $baseline-size: 1;
  $background-size: $px-line-height;

	// Sets a baseline every half rhythm.
	background: linear-gradient(
    transparent,
		transparent ($background-size / 2 - $baseline-size) + px,
		$baseline-color-transparent ($background-size / 2 - $baseline-size) + px,
		$baseline-color-transparent ($background-size / 2) + px,
		transparent ($background-size / 2) + px,
		transparent ($background-size - $baseline-size) + px,
		$baseline-color-transparent ($background-size - $baseline-size) + px,
    $baseline-color-transparent ($background-size ) + px
	);
	background-size: 100% ($background-size + px);
  background-repeat: repeat-y;
  background-position: 0 0;
}
